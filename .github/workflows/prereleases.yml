name: Prerelease

on:
  push:
    branches:
      - main
jobs:
  prerelease:
    if: ${{ github.repository_owner == 'onlineornot' }}
    name: Build & Publish a beta release to NPM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js 16.17
        uses: actions/setup-node@v3
        with:
          node-version: 16.17
          cache: "npm" # cache ~/.npm in case 'npm ci' needs to run

      - name: Install NPM Dependencies
        run: npm ci

      - name: Modify package.json version
        run: node .github/version-script.js

      - name: Build
        run: npm run build

      - name: Check for errors
        run: npm run check
        env:
          NODE_OPTIONS: "--max_old_space_size=8192"

      - name: Publish Beta to NPM
        run: npm publish --tag beta
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        working-directory: packages/onlineornot

      - name: Get Package Version
        run: echo "ONLINEORNOT_VERSION=$(npm view onlineornot@beta version)" >> $GITHUB_ENV
        working-directory: packages/onlineornot

  publish_prerelease_registry:
    if: ${{ github.repository_owner == 'onlineornot' }}
    name: Publish Prerelease Registry
    needs: prerelease
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js 16.17
        uses: actions/setup-node@v3
        with:
          node-version: 16.17
          cache: "npm" # cache ~/.npm in case 'npm ci' needs to run

      - name: Install NPM Dependencies
        run: npm ci

      - name: Build onlineornot
        run: npm run build
        env:
          NODE_ENV: "production"

      - name: Build & Publish Prerelease Registry
        run: npm run publish
        env:
          NODE_ENV: "production"
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        working-directory: packages/prerelease-registry
